shortName: reference-config

##############
# deployment #
##############

selectorLabels:
  app: reference-config

replicaCount: 1
autoscaling:
  enabled: false

revisionHistoryLimit: 1

podAnnotations:
  co.elastic.logs/enabled: 'true'
  co.elastic.logs/multiline.match: 'after'
  co.elastic.logs/multiline.negate: 'true'
  co.elastic.logs/multiline.pattern: '^202\d\-\d\d\-\d\d\s\d'

image:
  name: dgcd/reference-snapshot
  pullPolicy: IfNotPresent

podSecurityContext:
  runAsNonRoot: true
  runAsUser: 4242
  runAsGroup: 4242
  fsGroup: 4242

securityContext:
  allowPrivilegeEscalation: false
  privileged: false
  capabilities:
    drop:
      - ALL

containerPort: 8080

envFrom:
  - secretRef:
      name: reference-config-secret

env:
  - name: TZ
    value: Europe/Moscow
#  - name: XDG_CONFIG_HOME
#    value: /home/starter
#  - name: XDG_DATA_HOME
#    value: /home/starter
#  - name: HOME
#    value: /home/starter

resources:
  requests:
    memory: 499Mi
    cpu: 499m
  limits:
    memory: 499Mi
    cpu: 499m

startupProbeEnabled: true
startupProbe:
  httpGet:
    path: /actuator/info
    port: 8080
  initialDelaySeconds: 20
  periodSeconds: 3
  failureThreshold: 30

readinessProbeEnabled: true
readinessProbe:
  httpGet:
    path: /actuator/health/readiness
    port: 8080
  initialDelaySeconds: 10
  periodSeconds: 3
  failureThreshold: 30

livenessProbeEnabled: true
livenessProbe:
  httpGet:
    path: /actuator/health/liveness
    port: 8080
  initialDelaySeconds: 5
  periodSeconds: 5


###########
# service #
###########

service:
  type: ClusterIP
  port: 8080
  targetPort: 8080


##############
# config map #
##############

configMapPath: "/home/starter/application.properties"
configMapSubpath: "application.properties"
configMapName: spring-properties
configmap:
  spring.application.name: "reference-config"

  server.shutdown: "graceful"
  spring.threads.virtual.enabled: "true"
  spring.lifecycle.timeout-per-shutdown-phase: "5s"
  spring.mvc.servlet.load-on-startup: "1"

  spring.cloud.compatibility-verifier.enabled: "false"

  spring.cloud.config.server.git.uri: "http://gitlab.example.com/lab/reference-config-repo.git"
  spring.cloud.config.server.git.defaultLabel: "master"
  spring.cloud.config.server.git.search-paths: "cfg/{application}/{profile}"
  spring.cloud.config.server.git.username: "${GIT_USERNAME}"
  spring.cloud.config.server.git.password: "${GIT_PASSWORD}"
  spring.cloud.config.server.git.cloneOnStart: "true"

  spring.security.user.name: "${SECURITY_USERNAME}"
  spring.security.user.password: "${SECURITY_PASSWORD}"

  management.endpoints.web.exposure.include: "*"
  management.endpoint.health.show-components: "always"
  management.endpoint.health.show-details: "always"
  management.endpoint.health.probes.enabled: "true"
  management.endpoint.health.group.liveness.include: "ping"
  management.health.diskspace.enabled: "true"
  management.health.kubernetes.enabled: "true"
  management.info.os.enabled: "true"
  spring.cloud.discovery.client.composite-indicator.enabled: "false"

  management.metrics.export.prometheus.enabled: "true"
  management.metrics.distribution.percentiles-histogram.http.server.requests: "true"
  management.metrics.distribution.sla.http.server.requests: "1ms,5ms"

#  logging.level.org.springframework.cloud.config.server: "TRACE"
#  logging.level.org.eclipse.jgit: "DEBUG"


##################
# network policy #
##################

networkPolicy:

